<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP14 Patch 2" creationDateTime="2019-06-23T21:16:58.9128724" />
  <contentHeader name="HomeAutomation.project" modificationDateTime="2019-06-23T21:16:13.7108671">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/application" handleUnknown="implementation">
      <resource name="HomeAutomation">
        <task name="MainTask" interval="PT0.02S" priority="0">
          <pouInstance name="PLC_PRG_MAIN" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
              <TaskSettings KindOfTask="Cyclic" Interval="t#20ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
              </TaskSettings>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>3105d1e0-925d-4f28-aadf-e5d4d663e807</ObjectId>
            </data>
          </addData>
        </task>
        <task name="MqttCommunication" priority="1">
          <pouInstance name="PLC_PRG_MQTT" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
              <TaskSettings KindOfTask="Freewheeling" Interval="t#20ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
              </TaskSettings>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>697fd9f7-7f03-439d-a4ee-169b615acbda</ObjectId>
            </data>
          </addData>
        </task>
        <globalVars name="MqttVariables">
          <variable name="fbMqttPublishQueue">
            <type>
              <derived name="FB_MqttPublishQueue" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Shared Variables for MQTT publish communication </xhtml>
            </documentation>
          </variable>
          <variable name="collector_FB_OUTPUT_SWITCH_MQTT">
            <type>
              <derived name="SD_MQTT.CallbackCollector" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Shared Variables for MQTT subscribe communication </xhtml>
            </documentation>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>4f9cb91a-49cd-4924-912b-f57a11772a7e</ObjectId>
            </data>
          </addData>
        </globalVars>
        <globalVars name="PersistentVars">
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
                <Attribute Name="checksumnoinit_override" Value="2487535909" />
                <Attribute Name="init_related_code" Value="e2545669-e23e-45fa-90bb-dcdbc35c83a4" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>75fbe56d-b36e-4d1d-a520-902891aa15d6</ObjectId>
            </data>
          </addData>
        </globalVars>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="MQTT_MESSAGE">
              <baseType>
                <struct>
                  <variable name="Payload">
                    <type>
                      <string length="128" />
                    </type>
                  </variable>
                  <variable name="Topic">
                    <type>
                      <string length="128" />
                    </type>
                  </variable>
                  <variable name="Qos">
                    <type>
                      <derived name="SD_MQTT.QoS" />
                    </type>
                  </variable>
                  <variable name="MqttRetain">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7580db2f-a073-46d1-9a95-ca4a1d2cc921</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PLC_PRG_MAIN" pouType="program">
              <interface>
                <localVars>
                  <variable name="MqttPushbuttonPrefix">
                    <type>
                      <string length="100" />
                    </type>
                    <initialValue>
                      <simpleValue value="'WAGO-PFC200/Out/DigitalInputs/Pushbuttons/'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> INPUT FUNCTION BLOCKS </xhtml>
                    </documentation>
                  </variable>
                  <variable name="FB_DI_PB_001">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_002">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_003">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_004">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_005">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_006">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_007">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_008">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_009">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_010">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_011">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_012">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_013">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_014">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_015">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_016">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_017">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_018">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_019">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_020">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_021">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_022">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_023">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_024">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_025">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_026">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_027">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_028">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_029">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_030">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_031">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_032">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_033">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_034">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_035">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_036">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_037">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_038">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_039">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_040">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_041">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_042">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_043">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_044">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_045">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_046">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_047">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DI_PB_048">
                    <type>
                      <derived name="FB_INPUT_PUSHBUTTON_MQTT" />
                    </type>
                  </variable>
                  <variable name="MqttPubSwitchPrefix">
                    <type>
                      <string length="100" />
                    </type>
                    <initialValue>
                      <simpleValue value="'WAGO-PFC200/Out/DigitalOutputs/'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> OUTPUT FUNCTION BLOCKS </xhtml>
                    </documentation>
                  </variable>
                  <variable name="MqttSubSwitchPrefix">
                    <type>
                      <string length="100" />
                    </type>
                    <initialValue>
                      <simpleValue value="'WAGO-PFC200/In/DigitalOutputs/'" />
                    </initialValue>
                  </variable>
                  <variable name="FB_DO_SW_001">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_002">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_003">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_004">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_005">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_006">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_007">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_008">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_009">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_010">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_011">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_012">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_013">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_014">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_015">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_016">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_017">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_018">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_019">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_020">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_021">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_022">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_023">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_024">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_025">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_026">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_027">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_028">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_029">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_030">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_031">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                  <variable name="FB_DO_SW_032">
                    <type>
                      <derived name="FB_OUTPUT_SWITCH_MQTT" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="WRITE_SWITCHES">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_DO_SW_001(OUT	=&gt;			DO_001,										(* couple the function block to the physical output *)
	PRIOHIGH				:=FALSE,  									(* brings the output high regardless of other input values *)
	PRIOLOW					:=FALSE, 									(* brings the output low regardless of other input values. NOTE: Priohigh overrules Priolow input *)
	TOGGLE					:=FB_DI_PB_009.SINGLE 						(* for toggling the output *)	
);

FB_DO_SW_002(OUT =&gt; DO_002		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FB_DI_PB_009.DOUBLE	);
FB_DO_SW_003(OUT =&gt; DO_003		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FB_DI_PB_009.LONG		);
FB_DO_SW_004(OUT =&gt; DO_004		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FB_DI_PB_009.LONG		);
FB_DO_SW_005(OUT =&gt; DO_005		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FB_DI_PB_009.LONG		);
FB_DO_SW_006(OUT =&gt; DO_006		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FB_DI_PB_009.LONG		);
FB_DO_SW_007(OUT =&gt; DO_007		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FB_DI_PB_009.LONG		);
FB_DO_SW_008(OUT =&gt; DO_008		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FB_DI_PB_009.LONG		);
FB_DO_SW_009(OUT =&gt; DO_009		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_010(OUT =&gt; DO_010		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_011(OUT =&gt; DO_011		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_012(OUT =&gt; DO_012		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_013(OUT =&gt; DO_013		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_014(OUT =&gt; DO_014		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_015(OUT =&gt; DO_015		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_016(OUT =&gt; DO_016		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_017(OUT =&gt; DO_017		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_018(OUT =&gt; DO_018		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_019(OUT =&gt; DO_019		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_020(OUT =&gt; DO_020		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_021(OUT =&gt; DO_021		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_022(OUT =&gt; DO_022		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_023(OUT =&gt; DO_023		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_024(OUT =&gt; DO_024		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_025(OUT =&gt; DO_025		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_026(OUT =&gt; DO_026		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_027(OUT =&gt; DO_027		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_028(OUT =&gt; DO_028		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_029(OUT =&gt; DO_029		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_030(OUT =&gt; DO_030		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_031(OUT =&gt; DO_031		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
FB_DO_SW_032(OUT =&gt; DO_032		,PRIOHIGH:=FALSE			,PRIOLOW:=FALSE				,TOGGLE:=FALSE				);
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>bc43bd28-4a8e-408d-8fdd-b4f45ff42b62</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="READ_PUSHBUTTONS">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_DI_PB_001(PB:= DI_001); (* Provide the input FB the correct phyical input to validate each cyclus *)
FB_DI_PB_002(PB:= DI_002);
FB_DI_PB_003(PB:= DI_003);
FB_DI_PB_004(PB:= DI_004);
FB_DI_PB_005(PB:= DI_005);
FB_DI_PB_006(PB:= DI_006);
FB_DI_PB_007(PB:= DI_007);
FB_DI_PB_008(PB:= DI_008);
FB_DI_PB_009(PB:= DI_009);
FB_DI_PB_010(PB:= DI_010);
FB_DI_PB_011(PB:= DI_011);
FB_DI_PB_012(PB:= DI_012);
FB_DI_PB_013(PB:= DI_013);
FB_DI_PB_014(PB:= DI_014);
FB_DI_PB_015(PB:= DI_015);
FB_DI_PB_016(PB:= DI_016);
FB_DI_PB_017(PB:= DI_017);
FB_DI_PB_018(PB:= DI_018);
FB_DI_PB_019(PB:= DI_019);
FB_DI_PB_020(PB:= DI_020);
FB_DI_PB_021(PB:= DI_021);
FB_DI_PB_022(PB:= DI_022);
FB_DI_PB_023(PB:= DI_023);
FB_DI_PB_024(PB:= DI_024);
FB_DI_PB_025(PB:= DI_025);
FB_DI_PB_026(PB:= DI_026);
FB_DI_PB_027(PB:= DI_027);
FB_DI_PB_028(PB:= DI_028);
FB_DI_PB_029(PB:= DI_029);
FB_DI_PB_030(PB:= DI_030);
FB_DI_PB_031(PB:= DI_031);
FB_DI_PB_032(PB:= DI_032);
FB_DI_PB_033(PB:= DI_033);
FB_DI_PB_034(PB:= DI_034);
FB_DI_PB_035(PB:= DI_035);
FB_DI_PB_036(PB:= DI_036);
FB_DI_PB_037(PB:= DI_037);
FB_DI_PB_038(PB:= DI_038);
FB_DI_PB_039(PB:= DI_039);
FB_DI_PB_040(PB:= DI_040);
FB_DI_PB_041(PB:= DI_041);
FB_DI_PB_042(PB:= DI_042);
FB_DI_PB_043(PB:= DI_043);
FB_DI_PB_044(PB:= DI_044);
FB_DI_PB_045(PB:= DI_045);
FB_DI_PB_046(PB:= DI_046);
FB_DI_PB_047(PB:= DI_047);
FB_DI_PB_048(PB:= DI_048);</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>72c511d1-ce6f-4b43-a80f-bcc4f298eb89</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="MAIN_INIT">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(* INIT DIGITAL INPUT STUFF *)
FB_DI_PB_001.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	(* pointer to string prefix for the mqtt publish topic *)
	MQTTTopicSuffix := 'FB_DI_PB_001',									(* value to suffix the the MQTT topic, should be unique for each FB *)
	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue)		(* pointer to MqttPublishQueue to send a new Mqtt event *)
);
FB_DI_PB_002.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_002',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_003.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_003',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_004.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_004',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_005.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_005',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_006.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_006',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_007.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_007',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_008.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_008',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_009.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_009',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_010.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_010',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_011.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_011',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_012.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_012',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_013.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_013',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_014.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_014',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_015.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_015',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));
FB_DI_PB_016.InitMqtt(MQTTPublishPrefix:= ADR(MqttPushbuttonPrefix),	MQTTTopicSuffix := 'FB_DI_PB_016',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue));

(* INIT DIGITAL OUTPUT STUFF *)
FB_DO_SW_001.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),					(* pointer to string prefix for the mqtt publish topic *)
	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),									(* pointer to string prefix for the mqtt subscribe topic *)
	MQTTTopicSuffix := 'FB_DO_SW_001',													(* value to suffix the the MQTT topic, should be unique for each FB *)
	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue),						(* pointer to MqttPublishQueue to send a new Mqtt event *)
	pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT)	(* pointer to CallbackCollector to receive Mqtt subscription events *)
);
FB_DO_SW_002.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_002',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_003.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_003',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_004.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_004',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_005.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_005',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_006.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_006',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_007.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_007',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_008.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_008',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_009.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_009',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_010.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_010',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_011.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_011',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_012.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_012',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_013.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_013',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_014.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_014',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_015.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_015',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_016.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_016',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_017.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_017',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_018.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_018',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_019.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_019',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_020.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_020',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_021.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_021',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_022.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_022',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_023.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_023',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_024.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_024',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_025.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_025',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_026.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_026',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_027.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_027',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_028.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_028',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_029.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_029',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_030.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_030',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_031.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_031',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));
FB_DO_SW_032.InitMqtt(MQTTPublishPrefix:= ADR(MqttPubSwitchPrefix),	MQTTSubscribePrefix:= ADR(MqttSubSwitchPrefix),	MQTTTopicSuffix := 'FB_DO_SW_032',	pMqttPublishQueue := ADR(MqttVariables.fbMqttPublishQueue), pMqttCallbackCollector := ADR(MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT));</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>f5b06497-3f42-4150-9639-33f5f16d160a</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <SFC>
                  <step localId="0" initialStep="true" name="Init">
                    <position x="0" y="0" />
                    <connectionPointIn />
                    <connectionPointOut formalParameter="sfc" />
                    <connectionPointOutAction formalParameter="x" />
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">Init</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="6844a48e-46c2-4cc8-a185-a478f3b99cc0">TRUE</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </step>
                  <actionBlock localId="2">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="0" />
                    </connectionPointIn>
                    <action localId="1" qualifier="N" duration="" indicator="">
                      <relPosition x="0" y="0" />
                      <reference name="MAIN_INIT" />
                      <connectionPointOut />
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                          <attributes xmlns="">
                            <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">MAIN_INIT</attribute>
                            <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                            <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                            <attribute guid="e174fc0d-80b0-4a9e-a530-ca239c249a50">N</attribute>
                          </attributes>
                        </data>
                      </addData>
                    </action>
                  </actionBlock>
                  <inVariable localId="3">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>True</expression>
                  </inVariable>
                  <transition localId="4">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="0" formalParameter="sfc" />
                    </connectionPointIn>
                    <condition>
                      <connectionPointIn>
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </condition>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">True</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                          <attribute guid="8294df19-5962-4dee-a874-1051dabb0e3e">0</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </transition>
                  <step localId="5" name="Main">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="4" />
                    </connectionPointIn>
                    <connectionPointOut formalParameter="sfc" />
                    <connectionPointOutAction formalParameter="x" />
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">Main</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="6844a48e-46c2-4cc8-a185-a478f3b99cc0">FALSE</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </step>
                  <actionBlock localId="8">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="5" />
                    </connectionPointIn>
                    <action localId="6" qualifier="N" duration="" indicator="">
                      <relPosition x="0" y="0" />
                      <reference name="READ_PUSHBUTTONS" />
                      <connectionPointOut />
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                          <attributes xmlns="">
                            <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">READ_PUSHBUTTONS</attribute>
                            <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                            <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                            <attribute guid="e174fc0d-80b0-4a9e-a530-ca239c249a50">N</attribute>
                          </attributes>
                        </data>
                      </addData>
                    </action>
                    <action localId="7" qualifier="N" duration="" indicator="">
                      <relPosition x="0" y="0" />
                      <reference name="WRITE_SWITCHES" />
                      <connectionPointOut />
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                          <attributes xmlns="">
                            <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">WRITE_SWITCHES</attribute>
                            <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                            <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                            <attribute guid="e174fc0d-80b0-4a9e-a530-ca239c249a50">N</attribute>
                          </attributes>
                        </data>
                      </addData>
                    </action>
                  </actionBlock>
                  <inVariable localId="9">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>TRUE</expression>
                  </inVariable>
                  <transition localId="10">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="5" formalParameter="sfc" />
                    </connectionPointIn>
                    <condition>
                      <connectionPointIn>
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </condition>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">TRUE</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                          <attribute guid="8294df19-5962-4dee-a874-1051dabb0e3e">0</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </transition>
                  <jumpStep localId="11" targetName="Main">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="10" />
                    </connectionPointIn>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">Main</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </jumpStep>
                </SFC>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/sfcsettings" handleUnknown="implementation">
                  <SFCSettings>
                    <LibTitle>IecSfc</LibTitle>
                    <LibCompany>System</LibCompany>
                    <LibVersion>3.4.2.0</LibVersion>
                    <LibNamespace>IecSfc</LibNamespace>
                    <CalcActiveTransOnly>false</CalcActiveTransOnly>
                    <UseDefaults>false</UseDefaults>
                    <Flags>
                      <EnableLimit Declare="true" Use="false" />
                      <Init Declare="true" Use="false" />
                      <Reset Declare="true" Use="false" />
                      <QuitError Declare="true" Use="false" />
                      <Pause Declare="true" Use="false" />
                      <Error Declare="true" Use="false" />
                      <Trans Declare="true" Use="false" />
                      <ErrorStep Declare="true" Use="false" />
                      <ErrorPOU Declare="true" Use="false" />
                      <CurrentStep Declare="true" Use="false" />
                      <Tip Declare="true" Use="false" />
                      <TipMode Declare="true" Use="false" />
                      <MaxFlags Declare="true" Use="false" />
                      <SFCErrorAnalyzation Declare="true" Use="false" />
                      <SFCErrorAnalyzationTable Declare="true" Use="false" />
                    </Flags>
                  </SFCSettings>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>98c8b3af-823f-460e-96b4-4a3a11616ef1</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_INPUT_PUSHBUTTON_MQTT" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="PB">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="SINGLE">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="DOUBLE">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="LONG">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="InitMqttDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MqttPublishTopicPrefix">
                    <type>
                      <pointer>
                        <baseType>
                          <string />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="MqttPublishTopicSuffix">
                    <type>
                      <string length="15" />
                    </type>
                  </variable>
                  <variable name="pMqttPublishQueue">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="FB_MqttPublishQueue" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="FB_DETECTPUSH">
                    <type>
                      <derived name="OSCAT_BUILDING.CLICK_MODE" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_DETECTPUSH(
	IN:=PB , 
	SINGLE=&gt; SINGLE, 
	DOUBLE=&gt; DOUBLE, 
	LONG=&gt; , 
	TP_LONG=&gt; LONG, 
	T_LONG:= T#400MS);
	
IF FB_DETECTPUSH.SINGLE AND InitMqttDone THEN
	pMqttPublishQueue^.AddMessage(
		Payload := 'SINGLE',
		Topic := CONCAT(MqttPublishTopicPrefix^, MqttPublishTopicSuffix),
		Qos := SD_MQTT.QoS.ExactlyOnce,
		MqttRetain := FALSE
	);
END_IF

IF FB_DETECTPUSH.DOUBLE AND InitMqttDone THEN
	pMqttPublishQueue^.AddMessage(
		Payload := 'DOUBLE',
		Topic := CONCAT(MqttPublishTopicPrefix^, MqttPublishTopicSuffix),
		Qos := SD_MQTT.QoS.ExactlyOnce,
		MqttRetain := FALSE
	);
END_IF

IF FB_DETECTPUSH.TP_LONG AND InitMqttDone THEN
	pMqttPublishQueue^.AddMessage(
		Payload := 'LONG',
		Topic := CONCAT(MqttPublishTopicPrefix^, MqttPublishTopicSuffix),
		Qos := SD_MQTT.QoS.ExactlyOnce,
		MqttRetain := FALSE
	);
END_IF</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="InitMqtt" ObjectId="a05cf0a9-2685-45de-aeba-f1b0a6b85af7">
                    <interface>
                      <inputVars>
                        <variable name="MQTTPublishPrefix">
                          <type>
                            <pointer>
                              <baseType>
                                <string />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                        <variable name="MQTTTopicSuffix">
                          <type>
                            <string length="15" />
                          </type>
                        </variable>
                        <variable name="pMqttPublishQueue">
                          <type>
                            <pointer>
                              <baseType>
                                <derived name="FB_MqttPublishQueue" />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">THIS^.pMqttPublishQueue := pMqttPublishQueue;
THIS^.MqttPublishTopicPrefix := MQTTPublishPrefix;
THIS^.MqttPublishTopicSuffix := MQTTTopicSuffix;

InitMqttDone := TRUE;</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>fbe26336-bbdb-4602-a5ed-1620dbfb925d</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_OUTPUT_SWITCH_MQTT" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="PRIOHIGH">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                  <variable name="PRIOLOW">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                  <variable name="TOGGLE">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="OUT">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="Startup">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                  </variable>
                  <variable name="InitMqttDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MqttPublishTopicPrefix">
                    <type>
                      <pointer>
                        <baseType>
                          <string />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="MqttPublishTopicSuffix">
                    <type>
                      <string length="15" />
                    </type>
                  </variable>
                  <variable name="MQTTSubscribeTopic">
                    <type>
                      <string length="50" />
                    </type>
                  </variable>
                  <variable name="pMqttPublishQueue">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="FB_MqttPublishQueue" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="MqttHighRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MqttLowRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </localVars>
                <localVars persistent="true">
                  <variable name="PreviousState">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> To retain output state through powercycles</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                    <Inheritance>
                      <Implements>SD_MQTT.MQTT_SUBSCRIBE_CALLBACK</Implements>
                    </Inheritance>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Startup THEN
	OUT := PreviousState;
END_IF

IF PRIOHIGH THEN
	OUT:=TRUE;
ELSIF(PRIOLOW AND NOT (PRIOHIGH)) THEN
	OUT:= FALSE;
ELSIF MqttHighRequest THEN
	OUT:= TRUE;
	MqttHighRequest := FALSE;
	MqttLowRequest := FALSE;
ELSIF MqttLowRequest THEN
	OUT:= FALSE;
	MqttHighRequest := FALSE;
	MqttLowRequest := FALSE;
ELSIF(TOGGLE) THEN
	OUT:=NOT(OUT);
END_IF;



IF Startup AND InitMqttDone THEN
	pMqttPublishQueue^.AddMessage(
		Payload := BOOL_TO_STRING(OUT),
		Topic := CONCAT(MqttPublishTopicPrefix^, MqttPublishTopicSuffix),
		Qos := SD_MQTT.QoS.ExactlyOnce,
		MqttRetain := TRUE
	);
	Startup := FALSE;
ELSIF(PreviousState &lt;&gt; OUT) AND InitMqttDone THEN
	pMqttPublishQueue^.AddMessage(
		Payload := BOOL_TO_STRING(OUT),
		Topic := CONCAT(MqttPublishTopicPrefix^, MqttPublishTopicSuffix),
		Qos := SD_MQTT.QoS.ExactlyOnce,
		MqttRetain := TRUE
	);
END_IF	

PreviousState := OUT;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="InitMqtt" ObjectId="b0eb0a8e-ef00-4bf5-a167-d207444fa21e">
                    <interface>
                      <inputVars>
                        <variable name="MQTTPublishPrefix">
                          <type>
                            <pointer>
                              <baseType>
                                <string />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                        <variable name="MQTTSubscribePrefix">
                          <type>
                            <pointer>
                              <baseType>
                                <string />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                        <variable name="MQTTTopicSuffix">
                          <type>
                            <string length="15" />
                          </type>
                        </variable>
                        <variable name="pMqttPublishQueue">
                          <type>
                            <pointer>
                              <baseType>
                                <derived name="FB_MqttPublishQueue" />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                        <variable name="pMqttCallbackCollector">
                          <type>
                            <pointer>
                              <baseType>
                                <derived name="SD_MQTT.CallbackCollector" />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">THIS^.pMqttPublishQueue := pMqttPublishQueue;
THIS^.MQTTSubscribeTopic := CONCAT(MQTTSubscribePrefix^ ,MQTTTopicSuffix);
THIS^.MqttPublishTopicPrefix := MQTTPublishPrefix;
THIS^.MqttPublishTopicSuffix := MQTTTopicSuffix;

// register the FB agains the collector so mqtt events can be received
pMqttCallbackCollector^.put(instance:= THIS^);

InitMqttDone := TRUE;</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="PublishRecived" ObjectId="54e02ede-e4c8-453a-857f-58e1bf13249b">
                    <interface>
                      <returnType>
                        <BOOL />
                      </returnType>
                      <inputVars>
                        <variable name="Data">
                          <type>
                            <derived name="SD_MQTT.CALLBACK_DATA" />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Collection of recived Data</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//check if the packet is for this FB
IF CommonTypesAndFunctions.StrEquals(str1:= ADR(MQTTSubscribeTopic), str2:= Data.TopicOut) THEN
	//mark the interface call from the collector as done
	PublishRecived := TRUE;
	//now process the data
	IF CommonTypesAndFunctions.StrEquals(str1:= Data.PayloadString, str2:= ADR('TRUE')) THEN
		MqttHighRequest := TRUE;
	END_IF
	IF CommonTypesAndFunctions.StrEquals(str1:= Data.PayloadString, str2:= ADR('FALSE')) THEN
		MqttLowRequest := TRUE;
	END_IF
END_IF </xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>6b9f6e87-1d59-463d-821a-1ca879dcd434</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_MqttPublishWorker" pouType="functionBlock">
              <interface>
                <outputVars>
                  <variable name="SendDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="LocalMqttMessage">
                    <type>
                      <derived name="MQTT_MESSAGE" />
                    </type>
                  </variable>
                  <variable name="InitDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="RequestToSend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Send">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="publish">
                    <type>
                      <derived name="SD_MQTT.MQTTPublish" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">//need to call publish here because of FB nums
publish(
	Topic:= ADR(LocalMqttMessage.Topic), 
	PayloadString:= ADR(LocalMqttMessage.Payload), 
	PublishAsString:= TRUE, 
	QoSIn:= LocalMqttMessage.Qos, 
	MRetain:= LocalMqttMessage.MqttRetain, 
	send:= Send);
	
IF NOT InitDone THEN RETURN; END_IF

IF RequestToSend THEN
	Send := TRUE;
	SendDone := FALSE;
END_IF

IF publish.done THEN
	 SendDone := TRUE;
	 RequestToSend:=FALSE;
	 Send:=FALSE;
END_IF</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Init" ObjectId="ac184626-ec5f-4cab-88de-288ae507656a">
                    <interface>
                      <inputVars>
                        <variable name="inputMQTT_IN_OUT">
                          <type>
                            <pointer>
                              <baseType>
                                <derived name="SD_MQTT.MQTT_IN_OUT" />
                              </baseType>
                            </pointer>
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer MQTTT exchange strucure</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">publish.SetMqttInOut(MQTT_IN_OUT := inputMQTT_IN_OUT);

InitDone := TRUE;
SendDone := TRUE;
</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="PublishMessage" ObjectId="5b2b8add-5903-41ef-92dd-f06d11cfa66f">
                    <interface>
                      <inputVars>
                        <variable name="MqttMessage">
                          <type>
                            <derived name="MQTT_MESSAGE" />
                          </type>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">LocalMqttMessage := MqttMessage;

RequestToSend:=TRUE;</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>3df0ddfb-0729-4636-bf01-11c78995e8d4</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_MqttPublishQueue" pouType="functionBlock">
              <interface>
                <outputVars>
                  <variable name="EMPTY">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                  </variable>
                  <variable name="FULL">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="localMessage">
                    <type>
                      <derived name="MQTT_MESSAGE" />
                    </type>
                  </variable>
                  <variable name="fifo">
                    <type>
                      <array>
                        <dimension lower="0" upper="n" />
                        <baseType>
                          <derived name="MQTT_MESSAGE" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="pr">
                    <type>
                      <INT />
                    </type>
                  </variable>
                  <variable name="pw">
                    <type>
                      <INT />
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="n">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="1024" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> changing this value will chage the number of stored elements in the fifo </xhtml>
                    </documentation>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="GetMessage" ObjectId="7629b1b7-3c99-4c54-ad43-aa1640fca323">
                    <interface>
                      <returnType>
                        <derived name="MQTT_MESSAGE" />
                      </returnType>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT EMPTY THEN
	GetMessage := fifo[pr];
	pr := OSCAT_BASIC.INC1(pr,n);
	EMPTY := pr = pw;
	FULL := FALSE;
END_IF;</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="AddMessage" ObjectId="15bb2f85-1d7b-4222-a9f4-b252a876f5d7">
                    <interface>
                      <inputVars>
                        <variable name="Payload">
                          <type>
                            <string length="128" />
                          </type>
                        </variable>
                        <variable name="Topic">
                          <type>
                            <string length="128" />
                          </type>
                        </variable>
                        <variable name="Qos">
                          <type>
                            <derived name="SD_MQTT.QoS" />
                          </type>
                        </variable>
                        <variable name="MqttRetain">
                          <type>
                            <BOOL />
                          </type>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT FULL THEN
	localMessage.Payload := Payload;
	localMessage.Topic := Topic;
	localMessage.Qos := Qos;
	localMessage.MqttRetain := MqttRetain;
	fifo[pw] := localMessage;
	pw := OSCAT_BASIC.INC1(pw,n);
	FULL := pw = pr;
	EMPTY := FALSE;
END_IF;</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Reset" ObjectId="48cd8920-6757-477e-a8b8-53777aabcc24">
                    <interface />
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">pw := pr;
FULL := FALSE;
EMPTY := TRUE;</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e6132ec6-e338-480e-a002-5ef8a35407a6</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PLC_PRG_MQTT" pouType="program">
              <interface>
                <localVars>
                  <variable name="broker">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'192.168.1.16:1883'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> variables for MQTT configuration </xhtml>
                    </documentation>
                  </variable>
                  <variable name="clientID">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'WAGO-PFC200'" />
                    </initialValue>
                  </variable>
                  <variable name="MQTTClient">
                    <type>
                      <derived name="SD_MQTT.HANDLE_MQTT" />
                    </type>
                  </variable>
                  <variable name="MQTT_IN_OUT">
                    <type>
                      <derived name="SD_MQTT.MQTT_IN_OUT" />
                    </type>
                  </variable>
                  <variable name="MQTTInfo">
                    <type>
                      <derived name="SD_MQTT.MQTT_INFO" />
                    </type>
                  </variable>
                  <variable name="MQTTLwtTopic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Devices/WAGO-PFC200/availability'" />
                    </initialValue>
                  </variable>
                  <variable name="MQTTLwtPayload">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'offline'" />
                    </initialValue>
                  </variable>
                  <variable name="MQTTBirthMessage">
                    <type>
                      <derived name="MQTT_MESSAGE" />
                    </type>
                  </variable>
                  <variable name="MQTTBirthTopic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Devices/WAGO-PFC200/availability'" />
                    </initialValue>
                  </variable>
                  <variable name="MQTTBirthPayload">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'online'" />
                    </initialValue>
                  </variable>
                  <variable name="MQTTBirthHartbeat">
                    <type>
                      <derived name="OSCAT_BASIC.GEN_PULSE" />
                    </type>
                  </variable>
                  <variable name="MQTTBirthHartbeatTime">
                    <type>
                      <TIME />
                    </type>
                    <initialValue>
                      <simpleValue value="TIME#5s0ms" />
                    </initialValue>
                  </variable>
                  <variable name="MQTTConnectTrigger">
                    <type>
                      <derived name="Standard.R_TRIG" />
                    </type>
                  </variable>
                  <variable name="MQTTPublishBirth">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                  </variable>
                  <variable name="MQTTBirthPublisher">
                    <type>
                      <derived name="FB_MqttPublishWorker" />
                    </type>
                  </variable>
                  <variable name="initMqtt">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> variables for MQTT setup </xhtml>
                    </documentation>
                  </variable>
                  <variable name="icounter">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="ipublishers">
                    <type>
                      <UDINT />
                    </type>
                    <initialValue>
                      <simpleValue value="40" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> variables for MQTT publishing </xhtml>
                    </documentation>
                  </variable>
                  <variable name="publishers">
                    <type>
                      <array>
                        <dimension lower="0" upper="39" />
                        <baseType>
                          <derived name="FB_MqttPublishWorker" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="i">
                    <type>
                      <UDINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> variables to work with Mqttbuffer </xhtml>
                    </documentation>
                  </variable>
                  <variable name="subscriber_FB_OUTPUT_SWITCH_MQTT">
                    <type>
                      <derived name="SD_MQTT.MQTTSubscribe" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> variables for MQTT subscribing </xhtml>
                    </documentation>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="MQTT_INIT">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF NOT initMqtt THEN
	initMqtt := TRUE;
	(* Basic MQTT config *)
	MQTT_IN_OUT.ClientID := clientID;
	
	(* Set the LWT topic / payload *)
	MQTT_IN_OUT.BuildWillTopicAndMessage := FALSE;
	MQTT_IN_OUT.WillTopicBase := '';
	MQTT_IN_OUT.ClientWillTopic := MQTTLwtTopic;
	MQTT_IN_OUT.ClientWillMessage := MQTTLwtPayload;
	
	(* Set the birth message *)
	MQTTBirthMessage.Payload := MQTTBirthPayload;
	MQTTBirthMessage.Topic := MQTTBirthTopic;
	MQTTBirthMessage.Qos := SD_MQTT.QoS.ExactlyOnce;
	MQTTBirthMessage.MqttRetain := FALSE;
	
	(* Configure the rising edge detector to detect a connect/reconnect to the broker, used for  birth message *)
	MQTTConnectTrigger(CLK := MQTTInfo.MQTT_CONNECTED);
	
	(* Configure the dedicated MQTTBirth publisher *)
	MQTTBirthPublisher.Init(inputMQTT_IN_OUT:= ADR(MQTT_IN_OUT));
	
	(* Configure the pulse generator for the birth message hartbeat *)
	 MQTTBirthHartbeat(ENQ:=TRUE, PTH:=T#0S, PTL:=MQTTBirthHartbeatTime);
	
	(* INIT MQTT PUBLISH STUFF *)
	FOR icounter := 0 TO (ipublishers-1) DO		
		publishers[icounter].Init(inputMQTT_IN_OUT:= ADR(MQTT_IN_OUT));
	END_FOR 
	
	(* INIT MQTT SUBSCRIBE STUFF *)
	subscriber_FB_OUTPUT_SWITCH_MQTT.SetMqttInOut(MQTT_IN_OUT:= ADR(MQTT_IN_OUT));
END_IF

</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>b0c9e992-b112-47f4-aceb-f216353cefaf</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="MQTT_PUBLISH">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(* allow the rising edge detector to detect a connect/reconnect to the broker, used for  birth message *)
MQTTConnectTrigger(CLK := MQTTInfo.MQTT_CONNECTED);

(* allow the pulse generator to generate a pulse, used for birth message hartbeat *)
MQTTBirthHartbeat(ENQ:=TRUE, PTH:=T#0S, PTL:=MQTTBirthHartbeatTime);

(* Check if this is a new connection due to startup or connection issues *)
IF initMqtt AND (MQTTConnectTrigger.Q OR MQTTBirthHartbeat.Q) THEN
	MQTTPublishBirth := TRUE;
END_IF

(* On connect or reconnect publish a birth message using the dedicated birth publisher *)
IF MQTTPublishBirth THEN
	MQTTBirthPublisher.PublishMessage(MqttMessage := MQTTBirthMessage);
	MQTTPublishBirth:=FALSE;
END_IF


(* Check if Mqtt is initialized AND if there are elements on the queue to process AND if a MQTTbirthmessage has been published successfully *)
IF initMqtt AND NOT(MqttVariables.fbMqttPublishQueue.EMPTY) AND MQTTPublishBirth = FALSE AND MQTTBirthPublisher.SendDone THEN	
	(* Loop through all free publishers untill there are no more elements in the queue or no more free publishers *)
	FOR i:=0 TO (ipublishers-1) DO			
		(* use the publishers that are free  *)
		IF publishers[i].SendDone AND NOT(MqttVariables.fbMqttPublishQueue.EMPTY) THEN	
			(* Pass message from the queue to a publisher *)
			publishers[i].PublishMessage(MqttMessage:= MqttVariables.fbMqttPublishQueue.GetMessage());
		ELSIF MqttVariables.fbMqttPublishQueue.EMPTY THEN
			(* Queue is empty, jump out of the for loop	*)
			EXIT;	
		END_IF
	END_FOR
END_IF


(* If MQTT is initialized, let the MqttPublishWorkers do their work *)
IF initMqtt THEN
	MQTTClient(
		MQTT_IN_OUT:= MQTT_IN_OUT, 
		ENABLE:= TRUE, 
		URL:= broker, 
		TIMEOUT:= T#1S, 
		TLS:= FALSE);		
		
	MQTTBirthPublisher();
	
	FOR i := 0 TO (ipublishers-1) DO
  		publishers[i]();
	END_FOR

END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>4129da29-9461-4ab2-88d2-8dbec626fefe</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="MQTT_SUBSCRIBE">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(* If MQTT is initialized, let the subscriber(s) do its work *)
IF initMqtt THEN
	MQTTClient(
		MQTT_IN_OUT:= MQTT_IN_OUT, 
		ENABLE:= TRUE, 
		URL:= broker, 
		TIMEOUT:= T#1S, 
		TLS:= FALSE);

	subscriber_FB_OUTPUT_SWITCH_MQTT(
		Subscribe:= TRUE, 
		Topic:= ADR('WAGO-PFC200/In/DigitalOutputs/+'), 
		QoSSubscribe:= SD_MQTT.QoS.ExactlyOnce, 
		ExpectingString:= TRUE, 
		Callback:= MqttVariables.collector_FB_OUTPUT_SWITCH_MQTT,
	);
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>8f495dd5-08ff-4021-8d5e-f2fc6292398c</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <SFC>
                  <step localId="0" initialStep="true" name="Init">
                    <position x="0" y="0" />
                    <connectionPointIn />
                    <connectionPointOut formalParameter="sfc" />
                    <connectionPointOutAction formalParameter="x" />
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">Init</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="6844a48e-46c2-4cc8-a185-a478f3b99cc0">TRUE</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </step>
                  <actionBlock localId="2">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="0" />
                    </connectionPointIn>
                    <action localId="1" qualifier="N" duration="" indicator="">
                      <relPosition x="0" y="0" />
                      <reference name="MQTT_INIT" />
                      <connectionPointOut />
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                          <attributes xmlns="">
                            <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">MQTT_INIT</attribute>
                            <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                            <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                            <attribute guid="e174fc0d-80b0-4a9e-a530-ca239c249a50">N</attribute>
                          </attributes>
                        </data>
                      </addData>
                    </action>
                  </actionBlock>
                  <inVariable localId="3">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>True</expression>
                  </inVariable>
                  <transition localId="4">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="0" formalParameter="sfc" />
                    </connectionPointIn>
                    <condition>
                      <connectionPointIn>
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </condition>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">True</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                          <attribute guid="8294df19-5962-4dee-a874-1051dabb0e3e">0</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </transition>
                  <step localId="5" name="MQTT">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="4" />
                    </connectionPointIn>
                    <connectionPointOut formalParameter="sfc" />
                    <connectionPointOutAction formalParameter="x" />
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">MQTT</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="6844a48e-46c2-4cc8-a185-a478f3b99cc0">FALSE</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </step>
                  <actionBlock localId="8">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="5" />
                    </connectionPointIn>
                    <action localId="6" qualifier="N" duration="" indicator="">
                      <relPosition x="0" y="0" />
                      <reference name="MQTT_PUBLISH" />
                      <connectionPointOut />
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                          <attributes xmlns="">
                            <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">MQTT_PUBLISH</attribute>
                            <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                            <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                            <attribute guid="e174fc0d-80b0-4a9e-a530-ca239c249a50">N</attribute>
                          </attributes>
                        </data>
                      </addData>
                    </action>
                    <action localId="7" qualifier="N" duration="" indicator="">
                      <relPosition x="0" y="0" />
                      <reference name="MQTT_SUBSCRIBE" />
                      <connectionPointOut />
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                          <attributes xmlns="">
                            <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">MQTT_SUBSCRIBE</attribute>
                            <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                            <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                            <attribute guid="e174fc0d-80b0-4a9e-a530-ca239c249a50">N</attribute>
                          </attributes>
                        </data>
                      </addData>
                    </action>
                  </actionBlock>
                  <inVariable localId="9">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>TRUE</expression>
                  </inVariable>
                  <transition localId="10">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="5" formalParameter="sfc" />
                    </connectionPointIn>
                    <condition>
                      <connectionPointIn>
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </condition>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">TRUE</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                          <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                          <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                          <attribute guid="8294df19-5962-4dee-a874-1051dabb0e3e">0</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </transition>
                  <jumpStep localId="11" targetName="MQTT">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="10" />
                    </connectionPointIn>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                        <attributes xmlns="">
                          <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">MQTT</attribute>
                          <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                        </attributes>
                      </data>
                    </addData>
                  </jumpStep>
                </SFC>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/sfcsettings" handleUnknown="implementation">
                  <SFCSettings>
                    <LibTitle>IecSfc</LibTitle>
                    <LibCompany>System</LibCompany>
                    <LibVersion>3.4.2.0</LibVersion>
                    <LibNamespace>IecSfc</LibNamespace>
                    <CalcActiveTransOnly>false</CalcActiveTransOnly>
                    <UseDefaults>false</UseDefaults>
                    <Flags>
                      <EnableLimit Declare="true" Use="false" />
                      <Init Declare="true" Use="false" />
                      <Reset Declare="true" Use="false" />
                      <QuitError Declare="true" Use="false" />
                      <Pause Declare="true" Use="false" />
                      <Error Declare="true" Use="false" />
                      <Trans Declare="true" Use="false" />
                      <ErrorStep Declare="true" Use="false" />
                      <ErrorPOU Declare="true" Use="false" />
                      <CurrentStep Declare="true" Use="false" />
                      <Tip Declare="true" Use="false" />
                      <TipMode Declare="true" Use="false" />
                      <MaxFlags Declare="true" Use="false" />
                      <SFCErrorAnalyzation Declare="true" Use="false" />
                      <SFCErrorAnalyzationTable Declare="true" Use="false" />
                    </Flags>
                  </SFCSettings>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>012c3962-ea65-4f8b-be5c-432a302d1a76</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_INPUT_BINARYSENSOR_MQTT" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="BS">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Q">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Follows the input but debounced </xhtml>
                    </documentation>
                  </variable>
                  <variable name="EVENT">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event outputs only high for on clock cycle </xhtml>
                    </documentation>
                  </variable>
                  <variable name="EVENT_R">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="EVENT_F">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="InitMqttDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MqttPublishTopicPrefix">
                    <type>
                      <pointer>
                        <baseType>
                          <string />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="MqttPublishTopicSuffix">
                    <type>
                      <string length="15" />
                    </type>
                  </variable>
                  <variable name="pMqttPublishQueue">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="FB_MqttPublishQueue" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="FB_DEBOUNCE">
                    <type>
                      <derived name="OSCAT_BUILDING.DEBOUNCE" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> to debounce the physical input </xhtml>
                    </documentation>
                  </variable>
                  <variable name="FB_R_TRIG">
                    <type>
                      <derived name="Standard.R_TRIG" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> to detect a rising edge on the debounced signal </xhtml>
                    </documentation>
                  </variable>
                  <variable name="FB_F_TRIG">
                    <type>
                      <derived name="Standard.F_TRIG" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> to detect a falling edge on the debounced signal </xhtml>
                    </documentation>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_DEBOUNCE(IN := BS,	
	TD := T#50MS, (* 2x cyle + 10ms *)
	PM := FALSE,
	Q=&gt;Q);

FB_R_TRIG(CLK := FB_DEBOUNCE.Q);
FB_F_TRIG(CLK := FB_DEBOUNCE.Q);

EVENT := FB_R_TRIG.Q OR FB_F_TRIG.Q;
EVENT_R := FB_R_TRIG.Q;
EVENT_F := FB_F_TRIG.Q;

IF FB_R_TRIG.Q AND InitMqttDone THEN
	pMqttPublishQueue^.AddMessage(
		Payload := 'ON',
		Topic := CONCAT(MqttPublishTopicPrefix^, MqttPublishTopicSuffix),
		Qos := SD_MQTT.QoS.ExactlyOnce,
		MqttRetain := TRUE
	);
END_IF

IF FB_F_TRIG.Q AND InitMqttDone THEN
	pMqttPublishQueue^.AddMessage(
		Payload := 'OFF',
		Topic := CONCAT(MqttPublishTopicPrefix^, MqttPublishTopicSuffix),
		Qos := SD_MQTT.QoS.ExactlyOnce,
		MqttRetain := TRUE
	);
END_IF</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="InitMqtt" ObjectId="f110376d-54c8-434e-96eb-1aaf4c222164">
                    <interface>
                      <inputVars>
                        <variable name="MQTTPublishPrefix">
                          <type>
                            <pointer>
                              <baseType>
                                <string />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                        <variable name="MQTTTopicSuffix">
                          <type>
                            <string length="15" />
                          </type>
                        </variable>
                        <variable name="pMqttPublishQueue">
                          <type>
                            <pointer>
                              <baseType>
                                <derived name="FB_MqttPublishQueue" />
                              </baseType>
                            </pointer>
                          </type>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">THIS^.pMqttPublishQueue := pMqttPublishQueue;
THIS^.MqttPublishTopicPrefix := MQTTPublishPrefix;
THIS^.MqttPublishTopicSuffix := MQTTTopicSuffix;

InitMqttDone := TRUE;</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>ca9d988f-3694-4978-bb99-efe82355ffa6</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
            <Libraries>
              <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.13.0 (System)" />
              <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Standard, * (System)" />
              <Library Name="#IoDrvPfc200" Namespace="IoDrvPfc200Lib" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IoDrvPfc200, 3.5.13.0 (3S - Smart Software Solutions GmbH)" />
              <Library Name="#IecSfc" Namespace="IecSfc" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecSfc, 3.4.2.0 (System)" />
              <Library Name="#Analyzation" Namespace="Analyzation" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Analyzation, 3.5.2.0 (System)">
                <Parameters>
                  <Parameter Name="TABLE_UPPER_BOUND" Value="15" />
                  <Parameter Name="STRING_LENGTH_EXP" Value="255" />
                  <Parameter Name="STRING_LENGTH_ADDRESS" Value="20" />
                  <Parameter Name="STRING_LENGTH_COMMENT" Value="255" />
                  <Parameter Name="STRING_LENGTH_OUTSTRING" Value="255" />
                  <Parameter Name="TABLE_SHOW_VALID_ITEMS" Value="FALSE" />
                </Parameters>
              </Library>
              <Library Name="BASIC, 3.3.3.0 (OSCAT)" Namespace="OSCAT_BASIC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
              <Library Name="BUILDING, 1.0.0.0 (OSCAT)" Namespace="OSCAT_BUILDING" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
              <Library Name="#CommonTypsFunctions" Namespace="CommonTypesAndFunctions" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Common Helper for development, * (Stefan Dreyer)" />
              <Library Name="OSCAT NETWORK, 1.30 (OSCAT)" Namespace="OSCAT_NETWORK" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
              <Library Name="#SD_MQTT" Namespace="SD_MQTT" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="MQTT, * (Stefan Dreyer)" />
              <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
              <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
              <Library Name="#CDS_MemMan" Namespace="CMM" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CDS_MemMan, 3.3.2.0 (3S - Smart Software Solutions GmbH)" />
              <Library Name="Element Collections, 3.5.14.0 (3S - Smart Software Solutions GmbH)" Namespace="COL" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>1f1166ba-ce55-40de-a774-1179e27627c8</ObjectId>
                </data>
              </addData>
            </Libraries>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dc8b4b06-db0a-415d-9c9a-bbaa6953bc53</ObjectId>
          </data>
        </addData>
      </resource>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="HomeAutomation" ObjectId="dc8b4b06-db0a-415d-9c9a-bbaa6953bc53">
          <Object Name="Library Manager" ObjectId="1f1166ba-ce55-40de-a774-1179e27627c8" />
          <Folder Name="PRG's">
            <Object Name="PLC_PRG_MAIN" ObjectId="98c8b3af-823f-460e-96b4-4a3a11616ef1">
              <Object Name="WRITE_SWITCHES" ObjectId="bc43bd28-4a8e-408d-8fdd-b4f45ff42b62" />
              <Object Name="READ_PUSHBUTTONS" ObjectId="72c511d1-ce6f-4b43-a80f-bcc4f298eb89" />
              <Object Name="MAIN_INIT" ObjectId="f5b06497-3f42-4150-9639-33f5f16d160a" />
            </Object>
            <Object Name="PLC_PRG_MQTT" ObjectId="012c3962-ea65-4f8b-be5c-432a302d1a76">
              <Object Name="MQTT_INIT" ObjectId="b0c9e992-b112-47f4-aceb-f216353cefaf" />
              <Object Name="MQTT_PUBLISH" ObjectId="4129da29-9461-4ab2-88d2-8dbec626fefe" />
              <Object Name="MQTT_SUBSCRIBE" ObjectId="8f495dd5-08ff-4021-8d5e-f2fc6292398c" />
            </Object>
          </Folder>
          <Object Name="MainTask" ObjectId="3105d1e0-925d-4f28-aadf-e5d4d663e807" />
          <Object Name="MqttCommunication" ObjectId="697fd9f7-7f03-439d-a4ee-169b615acbda" />
          <Folder Name="Artifacts">
            <Object Name="FB_INPUT_PUSHBUTTON_MQTT" ObjectId="fbe26336-bbdb-4602-a5ed-1620dbfb925d">
              <Object Name="InitMqtt" ObjectId="a05cf0a9-2685-45de-aeba-f1b0a6b85af7" />
            </Object>
            <Folder Name="MQTT">
              <Object Name="FB_MqttPublishQueue" ObjectId="e6132ec6-e338-480e-a002-5ef8a35407a6">
                <Object Name="GetMessage" ObjectId="7629b1b7-3c99-4c54-ad43-aa1640fca323" />
                <Object Name="AddMessage" ObjectId="15bb2f85-1d7b-4222-a9f4-b252a876f5d7" />
                <Object Name="Reset" ObjectId="48cd8920-6757-477e-a8b8-53777aabcc24" />
              </Object>
              <Object Name="FB_MqttPublishWorker" ObjectId="3df0ddfb-0729-4636-bf01-11c78995e8d4">
                <Object Name="Init" ObjectId="ac184626-ec5f-4cab-88de-288ae507656a" />
                <Object Name="PublishMessage" ObjectId="5b2b8add-5903-41ef-92dd-f06d11cfa66f" />
              </Object>
              <Object Name="MQTT_MESSAGE" ObjectId="7580db2f-a073-46d1-9a95-ca4a1d2cc921" />
            </Folder>
            <Object Name="FB_OUTPUT_SWITCH_MQTT" ObjectId="6b9f6e87-1d59-463d-821a-1ca879dcd434">
              <Object Name="InitMqtt" ObjectId="b0eb0a8e-ef00-4bf5-a167-d207444fa21e" />
              <Object Name="PublishRecived" ObjectId="54e02ede-e4c8-453a-857f-58e1bf13249b" />
            </Object>
            <Object Name="FB_INPUT_BINARYSENSOR_MQTT" ObjectId="ca9d988f-3694-4978-bb99-efe82355ffa6">
              <Object Name="InitMqtt" ObjectId="f110376d-54c8-434e-96eb-1aaf4c222164" />
            </Object>
          </Folder>
          <Object Name="MqttVariables" ObjectId="4f9cb91a-49cd-4924-912b-f57a11772a7e" />
          <Object Name="PersistentVars" ObjectId="75fbe56d-b36e-4d1d-a520-902891aa15d6" />
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>